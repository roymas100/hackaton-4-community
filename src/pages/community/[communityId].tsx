import GameCoinCard from "@/components/GameCoinCard";
import GameNivelCard from "@/components/GameNivelCard";
import SideBar from "@/components/sideBar";
import { useCommunity, useDb } from "@/hooks/useDb";
import { Avatar, Flex, Image, Progress, Text } from "@chakra-ui/react";
import Spline from "@splinetool/react-spline";
import Head from "next/head";
import { useRouter } from "next/router";
import React, { useMemo } from "react";
import { ChevronDown, Dribbble, Home, Smile } from "react-feather";
import {
  LineChart,
  Line,
  XAxis,
  YAxis,
  CartesianGrid,
  Tooltip,
  Legend,
  ResponsiveContainer,
} from "recharts";
// import { Container } from './styles';

const data = [
  {
    name: "Janeiro",
    experiencia: 10,
  },
  {
    name: "Fevereiro",
    experiencia: 11,
  },
  {
    name: "Março",
    experiencia: 30,
  },
  {
    name: "Abril",
    experiencia: 35,
  },
  {
    name: "Maio",
    experiencia: 35,
  },
  {
    name: "Junho",
    experiencia: 40,
  },
  {
    name: "Julho",
    experiencia: 47,
  },
];

const CommunityPage: React.FC = () => {
  const { currentCommunity } = useCommunity();
  const { query } = useRouter();
  const { serverList } = useDb();

  const community = useMemo(() => {
    if (!currentCommunity) {
      return serverList.find((server) => server.id === query.communityId);
    }
    return currentCommunity;
  }, [currentCommunity, query.communityId, serverList]);

  return (
    <>
      <Head>
        <title>{community?.name}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Flex position="relative" backgroundColor="#f5f5f5">
        <SideBar />

        <Flex
          minWidth="378px"
          position="sticky"
          top={0}
          left={0}
          height="100vh"
          padding="16px"
          flexDirection="column"
          alignItems="center"
          backgroundColor="#fff"
          justifyContent="flex-start"
          gap="16px"
        >
          <GameNivelCard />

          <Rooms />

          <GameCoinCard />
        </Flex>

        <Flex
          background="linear-gradient(187.4deg, rgba(154, 77, 255, 0.2) 12.17%, rgba(246, 0, 221, 0) 32.18%)"
          width="100%"
          padding="32px"
        >
          <Flex flexDirection="column" gap="48px" w="100%">
            <Flex gap="20px" w="100%">
              <Flex
                padding="35px"
                flexDirection="column"
                gap="24px"
                alignItems="center"
                borderRadius="16px"
                backgroundColor="#211D28"
                w="100%"
              >
                <Flex justifyContent="space-between" w="100%">
                  <Flex gap="16px" alignItems="flex-start">
                    <Avatar src="https://i.pinimg.com/originals/4f/c5/be/4fc5be5c56e3b41fb952f094ffb7efd4.jpg" />
                    <Flex
                      gap="4px"
                      alignItems="flex-start"
                      justifyContent="center"
                      flexDir="column"
                    >
                      <Text color="#fff" fontWeight={500} fontSize="18px">
                        Lucas Santiago
                      </Text>
                      <Text color="#fff" fontWeight={500} fontSize="12px">
                        Embaixador da comunidade
                      </Text>
                    </Flex>
                  </Flex>

                  <Image alt="bronze" src="/bronze.svg" />
                </Flex>

                <Flex
                  flexWrap="wrap"
                  gap="12px"
                  height="100%"
                  alignItems="center"
                  justifyContent="center"
                >
                  <LineChart
                    width={500}
                    height={300}
                    data={data}
                    margin={{
                      top: 5,
                      right: 30,
                      left: 20,
                      bottom: 5,
                    }}
                  >
                    <CartesianGrid strokeDasharray="3 3" />
                    <XAxis dataKey="name" />
                    <YAxis />
                    <Tooltip />
                    <Legend />
                    <Line
                      type="monotone"
                      dataKey="experiencia"
                      stroke="#9A4DFF"
                      activeDot={{ r: 8 }}
                    />
                  </LineChart>
                </Flex>
              </Flex>
              {/* <Image src="/grafico.png" w="400px" /> */}

              <Flex
                w="100%"
                padding="35px"
                flexDirection="column"
                gap="12px"
                alignItems="center"
                borderRadius="16px"
                backgroundColor="#fff"
              >
                <Spline
                  scene="https://prod.spline.design/VIWFqzpSSvDvM8QR/scene.splinecode"
                  style={{ height: "190px", width: "190px" }}
                />
                <Text fontWeight={700} fontSize="24px" color="#2D2D2D">
                  Designer do mês
                </Text>
                <Text
                  fontWeight={500}
                  fontSize="12px"
                  color="#2D2D2D"
                  textAlign="center"
                  w="90%"
                >
                  Membro de maior destaque leva uma camisa para casa
                </Text>
                <Progress
                  height="6px"
                  value={45}
                  hasStripe
                  colorScheme="green"
                  borderRadius="4px"
                  w="100%"
                />
              </Flex>
            </Flex>

            <Divider
              title="Marketplace"
              description="Gaste moedas com produtos"
            />

            <Flex flexWrap="wrap" gap="24px" justifyContent="center">
              {products.map((product) => (
                <Product key={product.id} {...product} />
              ))}
            </Flex>

            <Divider
              title="Marketplace"
              description="Gaste moedas com mentorias profissionais de membros"
              color="linear-gradient(135.35deg, #00C292 1.15%, #263238 99.46%)"
            />

            <Flex flexWrap="wrap" gap="24px" justifyContent="center">
              {cursos.map((product) => (
                <Product key={product.id} {...product} />
              ))}
            </Flex>
          </Flex>
        </Flex>
      </Flex>
    </>
  );
};

interface Product {
  prestador: string;
  coins: number;
  price: string;
  avatar?: string;
  background?: string;
  canvas?: string;
  id: string;
}

const products: Product[] = [
  {
    prestador: "Felipe",
    coins: 25,
    price: "200,00",
    id: "1",
    canvas: "https://prod.spline.design/VIWFqzpSSvDvM8QR/scene.splinecode",
  },
  {
    prestador: "Marcela",
    coins: 25,
    price: "200,00",
    id: "2",
    canvas: "https://prod.spline.design/A0BNLM6A5FMmE6UA/scene.splinecode",
  },
  {
    prestador: "Marcela",
    coins: 25,
    price: "200,00",
    id: "3",
    canvas: "https://prod.spline.design/VIWFqzpSSvDvM8QR/scene.splinecode",
  },
];

const cursos: Product[] = [
  {
    prestador: "Marcel",
    coins: 25,
    price: "200,00",
    id: "1",
    background: "/gameficacao.svg",
  },
  {
    prestador: "Marcela",
    coins: 25,
    price: "200,00",
    id: "2",
    background: "/gameficacao1.svg",
  },
];

const Product = ({
  id,
  coins,
  prestador,
  price,
  avatar,
  background = "/bggray.svg",
  canvas,
}: Product) => {
  return (
    <Flex
      flexWrap="wrap"
      gap="24px"
      key={id}
      position="relative"
      width="342px"
      height="368px"
      borderRadius="12px"
      background={`url('${background}')`}
      backgroundPosition="center"
    >
      {canvas && <Spline scene={canvas} />}

      <Flex
        backdropFilter="blur(14px)"
        backgroundColor="rgba(255,255,255, 0.01)"
        position="absolute"
        bottom={0}
        width="100%"
        justifyContent="space-between"
        padding="16px"
        border="1px solid #FFFFFF05"
        borderBottomRadius="12px"
      >
        <Flex gap="16px">
          <Avatar src={avatar}></Avatar>
          <Flex flexDirection="column">
            <Text color="#FFA7FF" fontWeight={400} fontSize="12px">
              Prestado por
            </Text>
            <Text color="#fff" fontWeight={700} fontSize="18px">
              {prestador}
            </Text>
          </Flex>
        </Flex>

        <Flex flexDirection="column">
          <Text color="#FFA7FF" fontWeight={400} fontSize="12px">
            R${price}
          </Text>
          <Text color="#fff" fontWeight={700} fontSize="18px">
            {coins} Figcoins
          </Text>
        </Flex>
      </Flex>
    </Flex>
  );
};

const Divider = ({
  title,
  description,
  color = "linear-gradient(135.35deg, #9A4DFF 1.15%, #F600DD 99.46%)",
}: {
  title: string;
  description: string;
  color?: string;
}) => {
  return (
    <Flex
      flexDir="column"
      padding="28px 36px"
      borderRadius="16px"
      background="#fff"
      position="relative"
    >
      <Text color="#2D2D2D" fontWeight={700} fontSize="36px">
        {title}
      </Text>
      <Text color="#2D2D2D" fontWeight={500} fontSize="18px">
        {description}
      </Text>
      <Flex
        position="absolute"
        right={0}
        height="100%"
        width="175px"
        background={color}
        top={0}
        borderRightRadius="16px"
      />
    </Flex>
  );
};

const Rooms = () => {
  return (
    <Flex
      overflowY="auto"
      width="100%"
      padding="24px"
      flexDir="column"
      gap="16px"
      color="#2D2D2D"
    >
      <Flex gap="8px" cursor="pointer">
        <Home width="20px" />
        <Text>Início</Text>
      </Flex>

      <Flex gap="8px" cursor="pointer">
        <Smile width="20px" />
        <Text>Membros</Text>
      </Flex>

      <Flex flexDir="column" gap="5px">
        <Flex gap="8px" cursor="pointer">
          <Dribbble width="20px" color="#9A4DFF" />
          <Text
            background="linear-gradient(135deg, #9A4DFF 0%, #F600DD 100%);
-webkit-background-clip: text;
-webkit-text-fill-color: transparent"
            backgroundClip="text"
            fill="transparent"
            fontSize="16px"
            fontWeight={700}
          >
            Gamificação
          </Text>
        </Flex>
        <Text paddingLeft="28px" fontSize="14px" cursor="pointer">
          Desafios
        </Text>
        <Text
          cursor="pointer"
          paddingLeft="28px"
          background="linear-gradient(135deg, #9A4DFF 0%, #F600DD 100%);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent"
          backgroundClip="text"
          fill="transparent"
          fontSize="14px"
        >
          Loja
        </Text>
      </Flex>

      <Flex gap="8px" cursor="pointer">
        <ChevronDown width="20px" />
        <Text fontWeight={700}>Salas de bate papo</Text>
      </Flex>
    </Flex>
  );
};

export default CommunityPage;
